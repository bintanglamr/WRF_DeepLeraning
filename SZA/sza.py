# -*- coding: utf-8 -*-
"""SZA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mmRPVLLLZ2tz8oQU4if4zg05pa7LE0w-
"""

!pip install pysolar pandas openpyxl

from pysolar.solar import get_altitude, get_azimuth
from datetime import datetime, timedelta
import pandas as pd
import pytz  # Import pytz to handle timezone

# Set your location coordinates
latitude = -7.32476  # Koordinat stasiun
longitude = 106.41298

# Define timezone (GMT+7, Jakarta)
local_tz = pytz.timezone('Asia/Jakarta')

# Define start and end dates for one year with local timezone
start_date = local_tz.localize(datetime(2023, 1, 1, 7, 0))  # Start of the year in GMT+7
end_date = local_tz.localize(datetime(2024, 1, 1, 6, 0))  # End of the year in GMT+7

# Initialize an empty list to store results
data = []

# Loop through each hour of the year
current_time = start_date
while current_time <= end_date:
    # Calculate solar altitude (elevation angle)
    solar_altitude = get_altitude(latitude, longitude, current_time)

    # Calculate zenith angle
    zenith_angle = 90 - solar_altitude

    # Calculate solar azimuth angle
    solar_azimuth = get_azimuth(latitude, longitude, current_time)

    # Append the results to the list
    data.append([current_time, solar_altitude, solar_azimuth, zenith_angle])

    # Increment time by one hour
    current_time += timedelta(hours=1)

# Convert list to DataFrame for easy analysis
df = pd.DataFrame(data, columns=['WIB', 'Sun_Altitude', 'Sun_Azimuth', 'Sun_Zenith_Angle'])

# Convert timezone-aware datetime to timezone-naive datetime
df['WIB'] = df['WIB'].dt.tz_localize(None)

# Save DataFrame to Excel
df.to_excel('SZA_UJGT_2023.xlsx', index=False)

df.head(22)